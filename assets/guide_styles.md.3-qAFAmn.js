import{_ as i,c as t,o as d,al as r}from"./chunks/framework.clrIpTLE.js";const u=JSON.parse('{"title":"Styles","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"guide/styles.md","filePath":"guide/styles.md"}'),o={name:"guide/styles.md"};function a(s,e,l,c,n,g){return d(),t("div",null,e[0]||(e[0]=[r('<h1 id="styles" tabindex="-1">Styles <a class="header-anchor" href="#styles" aria-label="Permalink to &quot;Styles&quot;">​</a></h1><p>This section explains the styling system for the <code>Grid</code> and <code>GridItem</code> components. Styles are defined using CSS variables for flexibility and can be customized by overriding these variables in your own stylesheets. The default design uses a calm, professional palette suitable for modern applications.</p><h2 id="css-variables" tabindex="-1">CSS Variables <a class="header-anchor" href="#css-variables" aria-label="Permalink to &quot;CSS Variables&quot;">​</a></h2><p>All styles are driven by global CSS variables defined in the <code>:root</code> scope. These variables can be overridden in your own <code>:root</code> or a higher-specificity selector to customize the appearance of the grid system.</p><h3 id="example-of-overriding" tabindex="-1">Example of Overriding <a class="header-anchor" href="#example-of-overriding" aria-label="Permalink to &quot;Example of Overriding&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    --grid-bg-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#1a1e24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    --grid-item-bg-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rgba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">70</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    --grid-item-border-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#ff6b6b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="variable-reference" tabindex="-1">Variable Reference <a class="header-anchor" href="#variable-reference" aria-label="Permalink to &quot;Variable Reference&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Variable</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td><code>--grid-bg-color</code></td><td><code>#1e2229</code></td><td>Background color of the grid container.</td></tr><tr><td><code>--grid-active-bg-color</code></td><td><code>rgba(30, 34, 41, 0.95)</code></td><td>Background color when the grid is active (e.g., during manipulation).</td></tr><tr><td><code>--grid-line-color</code></td><td><code>rgba(255, 255, 255, 0.08)</code></td><td>Color of the grid lines when active.</td></tr><tr><td><code>--grid-item-border-color</code></td><td><code>#89b4fa</code></td><td>Border color for grid items, used for highlights and active states.</td></tr><tr><td><code>--grid-item-bg-color</code></td><td><code>rgba(42, 48, 56, 0.85)</code></td><td>Background color of grid items.</td></tr><tr><td><code>--resize-handle-bg-color</code></td><td><code>#6ee7b7</code></td><td>Background color of resize handles.</td></tr><tr><td><code>--grid-item-shadow</code></td><td><code>0 6px 16px rgba(0, 0, 0, 0.12)</code></td><td>Default shadow for grid items.</td></tr><tr><td><code>--grid-item-dragging-shadow</code></td><td><code>0 8px 20px rgba(137, 180, 250, 0.3)</code></td><td>Shadow applied when dragging an item.</td></tr><tr><td><code>--grid-item-resizing-shadow</code></td><td><code>0 6px 18px rgba(110, 231, 183, 0.3)</code></td><td>Shadow applied when resizing an item.</td></tr><tr><td><code>--grid-active-inner-shadow</code></td><td><code>inset 0 2px 10px rgba(0, 0, 0, 0.06)</code></td><td>Inner shadow for the active grid container.</td></tr><tr><td><code>--grid-item-active-shadow</code></td><td><code>0 6px 16px rgba(137, 180, 250, 0.25)</code></td><td>Shadow for an active grid item.</td></tr><tr><td><code>--grid-cell-size</code></td><td><code>50px</code></td><td>Size of each grid cell (This is the default value, and this variable is automatically adjusted based on the <a href="/VueGridle/guide/props.html#gridcellsize">gridCellSize</a> prop).</td></tr><tr><td><code>--resize-handle-size</code></td><td><code>12px</code></td><td>Size of resize handles.</td></tr><tr><td><code>--resize-handle-offset</code></td><td><code>-6px</code></td><td>Offset of resize handles from the item’s edges.</td></tr><tr><td><code>--grid-transition</code></td><td><code>all 0.1s ease-in-out</code></td><td>Transition timing for the grid container.</td></tr><tr><td><code>--grid-item-transition</code></td><td><code>all 0.1s ease</code></td><td>Transition timing for grid items.</td></tr><tr><td><code>--resize-handle-transition</code></td><td><code>all 0.1s ease-out</code></td><td>Transition timing for resize handles.</td></tr><tr><td><code>--grid-item-dragging-opacity</code></td><td><code>0.98</code></td><td>Opacity of a grid item while dragging.</td></tr><tr><td><code>--resize-handle-opacity</code></td><td><code>0.6</code></td><td>Default opacity of resize handles.</td></tr><tr><td><code>--resize-handle-hover-opacity</code></td><td><code>0.9</code></td><td>Opacity of resize handles on hover.</td></tr><tr><td><code>--grid-item-dragging-scale</code></td><td><code>1.03</code></td><td>Scale factor applied to a grid item while dragging.</td></tr><tr><td><code>--resize-handle-hover-scale</code></td><td><code>1.15</code></td><td>Scale factor for resize handles on hover.</td></tr><tr><td><code>--grid-item-hover-lift</code></td><td><code>-2px</code></td><td>Vertical lift (translateY) for grid items on hover.</td></tr><tr><td><code>--grid-item-cursor</code></td><td><code>grab</code></td><td>Cursor style for draggable grid items.</td></tr><tr><td><code>--grid-item-dragging-cursor</code></td><td><code>grabbing</code></td><td>Cursor style while dragging a grid item.</td></tr><tr><td><code>--resize-handle-z-index</code></td><td><code>10</code></td><td>Z-index of resize handles to ensure they stay above the item.</td></tr><tr><td><code>--resize-handle-border-radius</code></td><td><code>50%</code></td><td>Border radius of resize handles (circular by default).</td></tr><tr><td><code>--grid-item-highlight-border-width</code></td><td><code>2px</code></td><td>Width of the highlight border for grid items.</td></tr><tr><td><code>--grid-item-highlight-border-style</code></td><td><code>dashed</code></td><td>Style of the highlight border for grid items.</td></tr><tr><td><code>--grid-item-active-border-width</code></td><td><code>1px</code></td><td>Width of the border for active grid items.</td></tr><tr><td><code>--grid-item-active-border-style</code></td><td><code>solid</code></td><td>Style of the border for active grid items.</td></tr></tbody></table><hr><h2 id="class-styles" tabindex="-1">Class Styles <a class="header-anchor" href="#class-styles" aria-label="Permalink to &quot;Class Styles&quot;">​</a></h2><p>The following CSS classes are applied to the <code>Grid</code> and <code>GridItem</code> components to define their appearance and behavior.</p><h3 id="vuegridle-grid-container" tabindex="-1"><code>.vuegridle-grid-container</code> <a class="header-anchor" href="#vuegridle-grid-container" aria-label="Permalink to &quot;`.vuegridle-grid-container`&quot;">​</a></h3><ul><li><strong>Description</strong>: The main container for the grid, providing the layout context.</li><li><strong>Styles</strong>: <ul><li><code>position: relative</code>: Ensures absolute positioning of child items works correctly.</li><li><code>width: 100%</code>, <code>height: 100%</code>: Fills its parent container.</li><li><code>background-color: var(--grid-bg-color)</code>: Sets the default background.</li><li><code>transition: var(--grid-transition)</code>: Smooth transitions for background changes.</li></ul></li></ul><h3 id="vuegridle-grid-active" tabindex="-1"><code>.vuegridle-grid-active</code> <a class="header-anchor" href="#vuegridle-grid-active" aria-label="Permalink to &quot;`.vuegridle-grid-active`&quot;">​</a></h3><ul><li><strong>Description</strong>: Applied to the grid container when it’s in an active state (e.g., during dragging or resizing).</li><li><strong>Styles</strong>: <ul><li><code>background: var(--grid-active-bg-color)</code>: Changes the background color.</li><li><code>background-image</code>: Adds a grid pattern using linear gradients based on <code>--grid-cell-size</code>.</li><li><code>box-shadow: var(--grid-active-inner-shadow)</code>: Adds an inner shadow for depth.</li></ul></li></ul><h3 id="vuegridle-grid-item" tabindex="-1"><code>.vuegridle-grid-item</code> <a class="header-anchor" href="#vuegridle-grid-item" aria-label="Permalink to &quot;`.vuegridle-grid-item`&quot;">​</a></h3><ul><li><strong>Description</strong>: The base class for each grid item.</li><li><strong>Styles</strong>: <ul><li><code>position: absolute</code>: Allows positioning within the grid.</li><li><code>background-color: var(--grid-item-bg-color)</code>: Sets the item’s background.</li><li><code>cursor: var(--grid-item-cursor)</code>: Default cursor for dragging.</li><li><code>transition: var(--grid-item-transition)</code>: Smooth transitions for transforms and shadows.</li><li><code>user-select: none</code>: Prevents text selection during interaction.</li></ul></li></ul><h3 id="vuegridle-grid-item-hover" tabindex="-1"><code>.vuegridle-grid-item:hover</code> <a class="header-anchor" href="#vuegridle-grid-item-hover" aria-label="Permalink to &quot;`.vuegridle-grid-item:hover`&quot;">​</a></h3><ul><li><strong>Description</strong>: Applied when hovering over a grid item.</li><li><strong>Styles</strong>: <ul><li><code>box-shadow: var(--grid-item-shadow)</code>: Adds a subtle shadow.</li><li><code>transform: translateY(var(--grid-item-hover-lift))</code>: Lifts the item slightly.</li></ul></li></ul><h3 id="vuegridle-dragging" tabindex="-1"><code>.vuegridle-dragging</code> <a class="header-anchor" href="#vuegridle-dragging" aria-label="Permalink to &quot;`.vuegridle-dragging`&quot;">​</a></h3><ul><li><strong>Description</strong>: Applied to a grid item while it’s being dragged.</li><li><strong>Styles</strong>: <ul><li><code>opacity: var(--grid-item-dragging-opacity)</code>: Slightly reduces opacity.</li><li><code>cursor: var(--grid-item-dragging-cursor)</code>: Changes cursor to grabbing.</li><li><code>transform: scale(var(--grid-item-dragging-scale))</code>: Slightly enlarges the item.</li><li><code>box-shadow: var(--grid-item-dragging-shadow)</code>: Adds a distinct shadow.</li></ul></li></ul><h3 id="vuegridle-resizing" tabindex="-1"><code>.vuegridle-resizing</code> <a class="header-anchor" href="#vuegridle-resizing" aria-label="Permalink to &quot;`.vuegridle-resizing`&quot;">​</a></h3><ul><li><strong>Description</strong>: Applied to a grid item while it’s being resized.</li><li><strong>Styles</strong>: <ul><li><code>box-shadow: var(--grid-item-resizing-shadow)</code>: Adds a distinct shadow.</li></ul></li></ul><h3 id="resize-handle" tabindex="-1"><code>.resize-handle</code> <a class="header-anchor" href="#resize-handle" aria-label="Permalink to &quot;`.resize-handle`&quot;">​</a></h3><ul><li><strong>Description</strong>: Base class for resize handles on grid items.</li><li><strong>Styles</strong>: <ul><li><code>width</code>, <code>height: var(--resize-handle-size)</code>: Sets the size.</li><li><code>background: var(--resize-handle-bg-color)</code>: Sets the color.</li><li><code>position: absolute</code>: Positions handles relative to the item.</li><li><code>z-index: var(--resize-handle-z-index)</code>: Ensures handles are above the item.</li><li><code>border-radius: var(--resize-handle-border-radius)</code>: Makes handles circular.</li><li><code>opacity: var(--resize-handle-opacity)</code>: Default opacity.</li><li><code>transition: var(--resize-handle-transition)</code>: Smooth transitions.</li></ul></li></ul><h3 id="resize-handle-hover" tabindex="-1"><code>.resize-handle:hover</code> <a class="header-anchor" href="#resize-handle-hover" aria-label="Permalink to &quot;`.resize-handle:hover`&quot;">​</a></h3><ul><li><strong>Description</strong>: Applied when hovering over a resize handle.</li><li><strong>Styles</strong>: <ul><li><code>opacity: var(--resize-handle-hover-opacity)</code>: Increases opacity.</li><li><code>transform: scale(var(--resize-handle-hover-scale))</code>: Slightly enlarges the handle.</li></ul></li></ul><h3 id="top-left-top-right-bottom-left-bottom-right" tabindex="-1"><code>.top-left</code>, <code>.top-right</code>, <code>.bottom-left</code>, <code>.bottom-right</code> <a class="header-anchor" href="#top-left-top-right-bottom-left-bottom-right" aria-label="Permalink to &quot;`.top-left`, `.top-right`, `.bottom-left`, `.bottom-right`&quot;">​</a></h3><ul><li><strong>Description</strong>: Specific classes for positioning resize handles at each corner of the grid item.</li><li><strong>Styles</strong>: <ul><li>Positioned using <code>top</code>, <code>right</code>, <code>bottom</code>, <code>left</code> with <code>--resize-handle-offset</code>.</li><li><code>cursor</code>: Set to appropriate resize directions (<code>nwse-resize</code>, <code>nesw-resize</code>).</li></ul></li></ul><h3 id="vuegridle-grid-item-vuegridle-highlight" tabindex="-1"><code>.vuegridle-grid-item.vuegridle-highlight</code> <a class="header-anchor" href="#vuegridle-grid-item-vuegridle-highlight" aria-label="Permalink to &quot;`.vuegridle-grid-item.vuegridle-highlight`&quot;">​</a></h3><ul><li><strong>Description</strong>: Applied to highlight a grid item (e.g., when near another item).</li><li><strong>Styles</strong>: <ul><li><code>border: var(--grid-item-highlight-border-width) var(--grid-item-highlight-border-style) var(--grid-item-border-color)</code>: Adds a dashed border.</li></ul></li></ul><h3 id="vuegridle-grid-item-vuegridle-active" tabindex="-1"><code>.vuegridle-grid-item.vuegridle-active</code> <a class="header-anchor" href="#vuegridle-grid-item-vuegridle-active" aria-label="Permalink to &quot;`.vuegridle-grid-item.vuegridle-active`&quot;">​</a></h3><ul><li><strong>Description</strong>: Applied to the currently active grid item.</li><li><strong>Styles</strong>: <ul><li><code>border: var(--grid-item-active-border-width) var(--grid-item-active-border-style) var(--grid-item-border-color)</code>: Adds a solid border.</li><li><code>box-shadow: var(--grid-item-active-shadow)</code>: Adds a distinct shadow.</li></ul></li></ul><hr><h2 id="customization-tips" tabindex="-1">Customization Tips <a class="header-anchor" href="#customization-tips" aria-label="Permalink to &quot;Customization Tips&quot;">​</a></h2><ul><li><strong>Color Scheme</strong>: Override <code>--grid-bg-color</code>, <code>--grid-item-bg-color</code>, and <code>--resize-handle-bg-color</code> to match your app’s theme.</li><li><strong>Grid Visibility</strong>: Adjust <code>--grid-line-color</code> and <code>--grid-cell-size</code> to make the grid more or less prominent.</li><li><strong>Interaction Feedback</strong>: Modify <code>--grid-item-dragging-scale</code>, <code>--resize-handle-hover-scale</code>, or shadow variables for stronger visual cues.</li><li><strong>Performance</strong>: Fine-tune <code>--grid-item-transition</code> and <code>--resize-handle-transition</code> durations for smoother or faster animations.</li></ul><p>This guide covers the styling system for the grid, providing a flexible foundation for customization.</p>',37)]))}const p=i(o,[["render",a]]);export{u as __pageData,p as default};
